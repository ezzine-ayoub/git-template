#!/usr/bin/env bash
# pre-merge-commit hook - runs before merge commits
# Ensures code quality before merging branches
# Compatible with Windows Git Bash, WSL, and Unix systems

# Source shared functions
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$SCRIPT_DIR/shared-functions.sh"

PROJECT_NAME=$(get_project_name)
OS_TYPE=$(detect_os)

print_header "Pre-Merge-Commit Hook"
print_info "Running on $OS_TYPE"
print_info "Project: $PROJECT_NAME"

# Check if pre-commit configuration is valid
if ! check_precommit_config; then
    print_error "Pre-merge-commit configuration check failed"
    print_info "Please fix your .pre-commit-config.yaml file before merging"
    exit 1
fi

# Ensure pre-commit is installed
if ensure_python_deps && install_precommit; then
    # Run comprehensive pre-commit checks on all files for merge
    print_info "Running comprehensive pre-commit checks before merge..."
    if run_precommit "all-files"; then
        print_success "Pre-merge checks passed! Proceeding with merge..."
        exit 0
    else
        print_error "Merge blocked due to pre-commit hook failures"
        print_info "Fix the issues above before attempting to merge"
        print_info "Or use 'git merge --no-verify' to bypass hooks (not recommended)"
        exit 1
    fi
else
    print_error "pre-commit not installed or configured properly"
    print_info "Please run: pip install pre-commit && pre-commit install"
    exit 1
fi
