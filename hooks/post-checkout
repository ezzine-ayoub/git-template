#!/usr/bin/env bash
# post-checkout hook - runs after git clone or git checkout
# Sets up pre-commit hooks and configuration for new projects
# Compatible with Windows Git Bash, WSL, and Unix systems

# Source shared functions
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$SCRIPT_DIR/shared-functions.sh"

# Hook parameters
PREVIOUS_HEAD=$1
NEW_HEAD=$2
BRANCH_CHECKOUT=$3

# Only run on branch checkout (not file checkout)
if [ "$BRANCH_CHECKOUT" = "0" ]; then
    exit 0
fi

PROJECT_NAME=$(get_project_name)
OS_TYPE=$(detect_os)

print_header "Post-Checkout Hook"
print_info "Running on $OS_TYPE"
print_info "Project: $PROJECT_NAME"
print_info "Switched from $PREVIOUS_HEAD to $NEW_HEAD"

# Create default config if missing
if create_default_config; then
    print_success "Created default .pre-commit-config.yaml"
fi

# Ensure Python dependencies
if ensure_python_deps; then
    # Install pre-commit hooks
    if install_precommit; then
        print_success "Pre-commit hooks installed successfully"
        
        # Run initial check (non-blocking for post-checkout)
        print_info "Running initial pre-commit check..."
        if run_precommit "all-files"; then
            print_success "Project setup complete! [$PROJECT_NAME] ready with pre-commit hooks"
        else
            print_warning "Some pre-commit checks failed, but setup is complete"
            print_info "Run 'pre-commit run --all-files' to see and fix issues"
        fi
    else
        print_warning "Failed to install pre-commit hooks"
    fi
else
    print_warning "Please install Python and pip, then run: pip install pre-commit"
fi

exit 0
